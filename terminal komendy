create table przetwory (
id_przetworu int primary key,
rok_produkcji int(4) unsigned,
id_wykonawcy int, zawartość varchar(255),
dodatek varchar(255) default 'papryczka chilli',
id_konsumenta int,
foreign key (id_wykonawcy) references postac1(id_postaci),
foreign key (id_konsumenta) references postac1(id_postaci));


insert into przetwory values(default, 2022,1,'bigos',default,3);



insert into postac1 (nazwa,rodzaj)
values 
('wiking1','wiking'),
('wiking2','wiking'),
('wiking3','wiking'),
('wiking4','wiking'),
('wiking5','wiking');


select * from postac1 wiking2;


create table statek (
nazwa_statku varchar(40) primary key,
rodzaj_statku enum('transportowy','rybacki'),
data_wodowania date,
max_ladownosc int unsigned);


insert into statek (nazwa_statku)
values
('statek1'),
('statek2');

select * from statek statek2;


alter table postac1 add funkcja varchar(40);

update postac1 
set funkcja = 'kapitan'
where id_postaci = 1;


alter table postac1
add column statek;



_______________________________________________________________________________________________________________________________________________________________________

LAB 4

select * from postac1
where nazwa != 'Bjorn'
and rodzaj='wiking'
limit 2;
delete from postac1 where id_postaci=...(id ktore pasuje)

1b
alter table postac drop primary key;
#problem 1 - istniejące klucze obce w tej kolumnie
#tabela przetwory, walizka, ewntualnie izba
#usuwamoe lklczy obcych
alter table przetwory drop foreign key przetwory_ibfk_1;
#zeby go znalesc wpisac show create table i poszukac nazwy klucza obcego
#problem 2 atrubut auto_increment trzeba go usunac
alter table postac1 modify id_postaci int;
# drop primary key powinien zadziałac
alter table postac1 drop primary key;



zadanie 2


alter table postac add pesel char(11) first;
alter table postac add primary key(pesel);
update postac1 set pesel='12345645789'+ is_postaci;
alter table postac add primary key(pesel);

2b
alter table postac1 modify rodzaj enum('wiking','ptak','kobieta','syrena');
2c
UPDATE `debinskit`.`postac1` SET `id_postaci` = '8', `nazwa` = 'gertruda nieszczera' `rodzaj` = 'syrena' WHERE (`id_postaci` = '8');

3a
update postac1 set statek='nazwa statku ktora wybralismy' where nazwa LIKE '%a%';

select nazwa from postac where nazwa regexp '[a]';

3b
update statek set max_ladownosc=max_ladownosc*0.7 where data_wodowania >='1900-01-01' and data_wodowania <='2000-12-31'
#lub
where year(data_wodowania) between 1901 and 2000

select year(data_wodowania from postac;

alter table... -> dodanie wartosci wąż w kolumnie rodzaj w tabelui postac1
alter table postac1 modify rodzaj enum(wszyswtko co byl.o wczesniej + waz)

create table marynarz like postac1;  - przenosi klucz glowny, robi tylko strukture
insert into marynarz select * from postac1; - wstawienei danych z innej tabeli do skopiowanej taqbeli

create table marynarz select * from postac1;   - nie przenosi kluczsa glownego

create table ekwipunek like wikingowie.ekwipunek; itd.

select idZasobu, nazwa, waga, ilosc, dataPozyskania, rodzaj from wikingowie.zasob where rodzaj=('jedzenie')

lab 5 zadanie 3

#pkt 1

select dataPozyskania from zasob;

select dataPozyskania
,year(dataPozyskania)
,month(dataPozyskania)
,monthname(dataPozyskania
,day(dataPozyskania)
from zasob;

select * from zasob where month(dataPozyskania) = 7;

select * from zasob where month(dataPozyskania) in (7,8);

----

select * from zasob where rodzaj is not null;

order by wiek ASC, rodzaj DESC;
order by 1 ASC, 2 DESC;

to numery kolumn 

select * from kreatura order by dataUr limit 5;
select * from kreatura order by dataUr limit 5,5;

select rodzaj from kreatura where rodzaj regexp '^w$';
select rodzaj from kreatura where rodzaj like '^w$';

wybieranie nazw ktore zaczynaja sie na W

select distinct rodzaj from zasob;

wartosc unikalna (distinct) nie pojawiaja sie duplikaty

select distinct nazwa, dataPozyskania from zasob;

select distinct(rodzaj) from zasob;

jest to funkcja

# funkcja concat()
select concat(nazwa, rodzaj) from kreatura;
select concat('Nazywam sie',nazwa) from kreatura;

#powstanie wtedy napis nazwam sie do kazdej nazwy z tabeli np nazywam sie bjorn

#pkt 3
select nazwa, ilosc * waga from zasob where year(dataPozyskania) between 2000 and 2007;

# zadanie 5 
select nazwa
, (ilosc*waga)*0,7 as waga_netto 
, (ilosc*waga)*0,3 as odpadki
from zasob
where rodzaj='jedzenie';

#daje tabele gdzie zasoby wyswietlaja sie z obliczeniami 

select from zasob where rodzaj =null;

select sum(udzwig) from kreatura; #
select avg(udzwig) from kreatura; # srednia
select max(udzwig) from kreatura;
select min(udzwig) from kreatura;
select count(udzwig) from kreatura; # ilosc rekordow
select count(*) from kreatura;

select avg(waga) from kreatura where rodzaj='wiking'

#pkt 2 
select avg(waga), count(*) from kreatura group by rodzaj;

select nazwa, rodzaj, avg(waga), count(*) from kreatura group by rodzaj;

#pkt 3

select rodzaj, avg(2022 - year(dataUr)) as sredni_wiek from kreatura group by rodzaj

#ZADANIE 2 
#pkt 1
select rodzaj, sum(waga*ilosc) as waga 
from zasob group by rodzaj;
lub
select nazwa, rodzaj, sum(waga*ilosc) as waga 
from zasob group by nazwa, rodzaj with rollup order by  rodzaj;

select year(dataPozyskania), month(dataPozyskania) as miesiac, count(*) from zasob group by rok, miesiac with rollup 

#ciekawostka, bo to sie nie przyda

pkt 2 
select rodzaj, count(nazwa) from kreatura group by rodzaj having count(nazwa) > 1;

select nazwa, avg(waga) from zasob where ilosc >= 4 group by nazwa having avg(waga)>10

pkt 3

select rodzaj, count (nazwa) from zasob where ilosc >3 group by rodzaj

select count(*) from zasob where rodzaj='jedzenie'

select* from kreatura, ekwipunek;
where kreatura, idKreatury= ekwipunek, idKreatury;
select k.nazwa, e.ilosc, e.idZasobu from kreatura k inner join ekwipunek e inner join zasob z on z.idZasobu=e.idZasobu on k.idKreatury=e.idKreatury

select * from kreatura k left join ekwipunek e on k.idKreatury=e.idKreatury where e.idEkwipunku is null;

select idKreatury from kreatura;
select distinct idKreatury from ekwipunek where id kreatury is not null;
select idkreatury from kreatura where idKreatury not in(select distinct idKreatury from ekwipunek where id kreatury is not null);

























